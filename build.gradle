plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
    //id 'pmd'
    id 'com.jfrog.bintray' version '1.1'
}

version = '1.0.0'
group = 'com.lookout.cassandra'
defaultTasks 'check', 'assemble'

shadowJar {
    manifest {
        attributes 'Implementation-Title': 'Cassandra Health Check',
                   'Implementation-Version': project.version,
                   'Main-Class': 'com.lookout.cassandra.CassandraHealthCheck'
    }
}
assemble.dependsOn shadowJar
assemble.dependsOn javadoc
/* Disable the default jar task */
jar.enabled = false


repositories {
    jcenter()
//    maven {
//       // url 'https://dl.bintray.com/rkuris/cassandra-driver-core'
//    }
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile (group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.0.2') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile group: 'args4j', name: 'args4j', version: '2.32'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    testCompile (group: 'org.cassandraunit', name: 'cassandra-unit', version: '3.0.0.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'com.datastax.cassandra', module: 'cassandra-driver-core'
        exclude group: 'io.netty', module: 'netty-all'
    }
    testCompile group: 'io.netty', name: 'netty-all', version: '4.0.27.Final'
    testCompile group: 'com.google.collections', name: 'google-collections', version: '1.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

bintray {
  filesSpec {
    from 'build/libs'
    into '.'
  }
  publish = true
  pkg {
    repo = 'systems'
    name = 'cassandra-health-check'
    user = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : System.getenv('BINTRAY_KEY')
    userOrg = 'lookout'
    version {
        name = project.version
    }
  }
}

//pmd {
//  targetJdk = targetCompatibility
//  ignoreFailures = false
//  reportsDir = file("$project.buildDir/reports/pmd")
//  ruleSetFiles = files("src/test/resources/pmd.xml")
//}
